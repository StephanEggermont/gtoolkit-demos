OmEntry {	#tags : {		#prior : OmNullReference [  ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #pictureWithFacesAndForm,			#protocol : #'example - picture',			#sourceCode : 'pictureWithFacesAndForm\r  <gtExample>\r  | picture |\r  picture := self pictureWithFacesAndNoForm.\r  picture loadPictureFormFile: self pictureFile.\r  self assert: picture faces size equals: 3.\r  self assertFacesWithFormIn: picture.\r  ^ picture',			#stamp : 'AndreiChis 9/6/2018 16:19',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #pictureWithNoFacesAndForm,			#protocol : #'example - picture',			#sourceCode : 'pictureWithNoFacesAndForm\r  <gtExample>\r  | picture |\r  picture := self emptyPicture.\r  self assert: picture pictureForm equals: nil.\r  picture loadPictureFormFile: self pictureFile.\r  self assert: picture pictureForm notNil.\r  self assert: picture pictureForm extent equals: 1280@921.\r  ^ picture',			#stamp : 'AndreiChis 9/6/2018 16:20',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #'assertFacesWithFormIn:',			#protocol : #assertion,			#sourceCode : 'assertFacesWithFormIn: aPicture\r  aPicture faces do: [ :aFace |\r    self assert: aFace containerPicture equals: aPicture.\r    self assert: aFace hasFaceForm.\r    self assert: aFace faceForm notNil ]',			#stamp : 'AndreiChis 9/6/2018 16:21',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #pictureFile,			#protocol : #accessing,			#sourceCode : 'pictureFile\r\t^ GtIcebergUtility repositoriesLocation \r\t\t/ \'feenkcom\'\r\t\t/ \'gtoolkit-demos\' \r\t\t/ \'data\' \r\t\t/ \'faceapi\' \r\t\t/ \'1280px-Einstein-with-habicht-and-solovine.jpg\'',			#stamp : 'AndreiChis 9/6/2018 16:23',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}